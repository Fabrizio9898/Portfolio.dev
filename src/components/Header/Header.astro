---
const currentYear = new Date().getFullYear();
import MailIcon from "@/components/icons/Mail.astro";
import MenuButton from "../icons/MenuButton.astro";
import ThemeToggle from "../ThemeToggle/ThemeToggle.astro";
import LinkedInIcon from "@/components/icons/LinkedIn.astro";

const navItems = [
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
    data: "NAVBAR_PROYECTS",
  },
  {
    title: "Trayectoria",
    label: "trayectoria",
    url: "/#trayectoria",
    data: "NAVBAR_TRAYECTORY",
  },
  {
    title: "Sobre mí",
    label: "sobre-mi",
    url: "/#sobre-mi",
    data: "NAVBAR_ABOUT",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:fabrizioandrade9898@gmail.com",
    data: "NAVBAR_CONTACT",
  },
];

---

<header
  id="mainHeader"
  class="fixed top-0 z-10 flex items-center justify-between w-full mx-auto mt-2"
>
  <nav
    id="main-navbar"
    class="hidden px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center mx-auto"
  >
    {
      navItems.map((link, index) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
          data-i18n={link.data}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
  <MenuButton />

  <!-- Mobile Menu Overlay -->
  <div
    id="mobile-menu"
    class="fixed inset-0 z-20 invisible opacity-0 bg-white dark:bg-gray-800 transition-all duration-300 ease-in-out overflow-y-auto"
  >
    <div class="flex h-16 items-center justify-between px-4">
      <span class="text-lg font-semibold uppercase">Menú</span>
      <div class="flex justify-center mr-14">
        <ThemeToggle />
      </div>
    </div>
    <hr class="w-full border-t-2 border-blue-700" />
    <nav>
      <ul class="flex flex-col gap-6 py-6">
        {
          navItems.map((link, index) => (
            <li class="flex justify-center">
              <a
                class="text-lg font-semibold"
                href={link.url}
                data-i18n={link.data}
              >
                {link.title}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <hr class="w-full border-t-2 border-blue-700" />
    <footer
      class="flex flex-col items-center justify-between gap-4 py-4"
    >
      <span
        class="text-sm sm:text-center text-zinc-800/90 dark:text-zinc-200/90"
        >© {currentYear}
        Fabrizio Andrade
      </span>
      <hr class="w-full border-t-2 border-blue-700" />

      <nav>
        <ul class="flex">
          <li>
            <a
              href="mailto:fabrizioandrade9898@gmail.com"
              target="_blank"
              rel="noopener noreferrer"
              role="link"
              class="inline-flex items-center justify-center gap-2 px-2 py-1 max-w-fit"
            >
              <LinkedInIcon class="size-8" /></a
            >
          </li>
          <li>
            <a
              href="mailto:fabrizioandrade9898@gmail.com"
              target="_blank"
              rel="noopener noreferrer"
              role="link"
              class="inline-flex items-center justify-center gap-2 px-2 py-1 max-w-fit"
            >
              <MailIcon class="size-8" /></a
            >
          </li>
        </ul>
      </nav>
    </footer>
  </div>
</header>

<script>
  const menuButton = document.getElementById("menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const menuLinks = document.querySelectorAll("#mobile-menu nav a");
  const mainHeader = document.getElementById("mainHeader");

  function toggleMenu() {
    if (!menuButton || !mobileMenu || !mainHeader) return;

    const isMenuOpen = menuButton.classList.contains("active");

    if (isMenuOpen) {
      // Close menu
      mobileMenu.classList.remove("visible", "opacity-100");
      mobileMenu.classList.add("invisible", "opacity-0");
      document.body.style.overflow = ""; // Restore scrolling
      menuButton.classList.remove("active");
    } else {
      // Open menu
      mobileMenu.classList.remove("invisible", "opacity-0");
      mobileMenu.classList.add("visible", "opacity-100");
      document.body.style.overflow = "hidden"; // Prevent scrolling when menu is open
      menuButton.classList.add("active");

      menuButton.style.zIndex = "30";
      mainHeader.style.zIndex = "30";
    }
  }

  if (menuButton) {
    menuButton.addEventListener("click", toggleMenu);
  }

  // Close menu when clicking on links
  menuLinks.forEach((link) => {
    link.addEventListener("click", () => {
      if (menuButton && menuButton.classList.contains("active")) {
        toggleMenu();
      }
    });
  });

  // Add resize event listener to handle screen size changes
  window.addEventListener("resize", () => {
    if (
      window.innerWidth > 850 &&
      menuButton &&
      menuButton.classList.contains("active") &&
      mobileMenu
    ) {
      // Close menu when screen size becomes larger than mobile breakpoint
      mobileMenu.classList.remove("visible", "opacity-100");
      mobileMenu.classList.add("invisible", "opacity-0");
      document.body.style.overflow = ""; // Restore scrolling
      menuButton.classList.remove("active");
    }
  });

  // Update the DOMContentLoaded event listener with null check
  document.addEventListener("DOMContentLoaded", () => {
    if (window.innerWidth > 850 && mobileMenu) {
      mobileMenu.classList.remove("visible", "opacity-100");
      mobileMenu.classList.add("invisible", "opacity-0");
      if (menuButton) menuButton.classList.remove("active");
    }
  });

  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any) => {
      entries.forEach((entry: any) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500");
            } else {
              console.log('holaaa');
              item.classList.remove("text-blue-500");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  #main-navbar {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  #main-navbar {
    @apply dark:bg-gray-800/90 bg-white/50;
  }

  @media (width > 850px) {
    #main-navbar {
      display: flex;
    }
  }
  @media (width <= 850px) {
    header {
      position: static;
    }
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }

  /* Mobile menu styles */
  #mobile-menu.visible {
    display: block;
  }
</style>
